name: Generate Docs and Count Lines of Code

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            # Documentation Generation Steps
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "21.6.2"

            - name: Install dependencies for docs
              run: npm install

            - name: Generate docs
              run: npx typedoc --options typedoc.json

            - name: Copy custom .gitignore for GitHub Actions
              run: cp .github/workflows/gitignore-action .gitignore

            - name: Commit and push docs
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                  git add docs/
                  git commit -m 'Update docs'
                  git push origin main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Lines of Code Counting Steps
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.x"

            - name: Install dependencies for LOC
              run: |
                  python -m pip install --upgrade pip
                  pip install requests matplotlib

            - name: Fetch and Plot LOC
              run: |
                  python .github/scripts/count-loc.py

            # Debug: List files in the repository to check if the image is generated
            - name: List files for debugging
              run: |
                  ls -R

            # Handle unstaged changes before pull
            - name: Stash unstaged changes
              run: |
                  git stash --include-untracked

            - name: Pull latest changes
              run: |
                  git pull origin main --rebase

            - name: Apply stashed changes
              if: success() && steps.stash-outcome.outputs.stash-result == 'changes'
              run: |
                  git stash pop

            - name: Commit changes
              run: |
                  git config --global user.name 'github-actions'
                  git config --global user.email 'github-actions@github.com'
                  git add LOC_pie_chart.png README.md
                  git commit -m 'Update LOC pie chart in README'
                  git push
